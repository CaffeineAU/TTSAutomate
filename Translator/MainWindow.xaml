<Window x:Class="TTSAutomate.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TTSAutomate"
        xmlns:self="clr-namespace:TTSAutomate.Commands"
        mc:Ignorable="d"
        Title="TTSAutomate" Height="800" Width="1000" FontSize="16" Background="#FF4692D1" Icon="speech-bubble.ico" Closing="Window_Closing" GotFocus="Window_GotFocus" Loaded="Window_GotFocus">
    <Window.CommandBindings>
        <CommandBinding Command="self:CustomCommands.BrowsePhraseFileCommand" Executed="BrowsePhraseFileCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.CreatePhraseFileCommand" Executed="CreatePhraseFileCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.BrowseOutputDirectoryCommand" Executed="BrowseOutputDirectoryCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.StartDownloadingCommand" CanExecute="StartDownloadingCommand_CanExecute" Executed="StartDownloadingCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.StopDownloadingCommand" CanExecute="StopDownloadingCommand_CanExecute" Executed="StopDownloadingCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.SavePhraseFileCommand" CanExecute="SavePhraseFileCommand_CanExecute" Executed="SavePhraseFileCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.SaveAsPhraseFileCommand" CanExecute="SavePhraseFileCommand_CanExecute" Executed="SaveAsPhraseFileCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.InsertRowsAboveCommand" CanExecute="InsertRowsAboveCommand_CanExecute" Executed="InsertRowsAboveCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.InsertRowsBelowCommand" CanExecute="InsertRowsBelowCommand_CanExecute" Executed="InsertRowsBelowCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.MoveRowsUpCommand" CanExecute="MoveRowsUpCommand_CanExecute" Executed="MoveRowsUpCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.MoveRowsDownCommand" CanExecute="MoveRowsDownCommand_CanExecute" Executed="MoveRowsDownCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.ShowSettingsCommand" CanExecute="ShowSettingsCommand_CanExecute" Executed="ShowSettingsCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.PlayAllCommand" CanExecute="PlayAllCommand_CanExecute" Executed="PlayAllCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.PlaySelectedCommand" CanExecute="PlaySelectedCommand_CanExecute" Executed="PlaySelectedCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.PausePlayingCommand" CanExecute="PausePlayingCommand_CanExecute" Executed="PausePlayingCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.ResumePlayingCommand" CanExecute="ResumePlayingCommand_CanExecute" Executed="ResumePlayingCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.StopPlayingCommand" CanExecute="StopPlayingCommand_CanExecute" Executed="StopPlayingCommand_Executed" />
    </Window.CommandBindings>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo/>
    </Window.TaskbarItemInfo>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="90"/>
            <ColumnDefinition Width="90"/>
            <ColumnDefinition Width="60"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="210"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="350"/>
            <RowDefinition Height="60"/>
        </Grid.RowDefinitions>
        <DataGrid x:Name="WordsListView" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="2" Grid.RowSpan="2" Grid.ColumnSpan="4" RowHeaderWidth="35" ItemsSource="{Binding Path=PhraseItems}" AutoGenerateColumns="False" CellEditEnding="WordsListView_CellEditEnding"  Margin="5" PreviewKeyDown="WordsListView_PreviewKeyDown" AlternatingRowBackground="#FFE5EDF7" SelectionUnit="CellOrRowHeader" SelectionChanged="WordsListView_SelectionChanged" local:DataGridBehavior.DisplayRowNumber="True" >
            <DataGrid.Columns>
                <DataGridTextColumn  Header="Folder" Binding="{Binding Folder}" CanUserSort="False" />
                <DataGridTextColumn  Header="Filename" Binding="{Binding FileName}" CanUserSort="False" />
                <DataGridTextColumn  Header="Phrase to Speak" Binding="{Binding Phrase}" CanUserSort="False"/>
                <DataGridTemplateColumn Header="Play" CanUserSort="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Click="PlayButton_Click" CommandParameter="{Binding FullPathAndFile}" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Content" Value="Play" />
                                        <Setter Property="IsEnabled" Value="False" />
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Setter Property="Focusable" Value="False"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding DownloadComplete}" Value="False">
                                                <Setter Property="Content" Value="Preview" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding CanDownload}" Value="True">
                                                <Setter Property="IsEnabled" Value="True" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Label  Content="Phrase File" HorizontalAlignment="Stretch" VerticalContentAlignment="Center" VerticalAlignment="Stretch" Margin="5" Grid.ColumnSpan="2" Grid.Column="1"/>
        <TextBox HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="{Binding Path=PhraseFileName}"  VerticalContentAlignment="Center" VerticalAlignment="Stretch"  Grid.Column="3" Margin="5" IsReadOnly="True" >
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding NeedToSave}" Value="True">
                            <Setter Property="Background" Value="Red" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="FontStyle" Value="Italic" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <Label  Content="Output Directory" HorizontalAlignment="Stretch" VerticalContentAlignment="Center" VerticalAlignment="Stretch" Grid.Row="1" Margin="5" Grid.Column="1" Grid.ColumnSpan="2"/>
        <TextBox HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="{Binding Path=OutputDirectoryName}" VerticalContentAlignment="Center" VerticalAlignment="Stretch"  Grid.Column="3" Grid.Row="1" Margin="5" IsReadOnly="True"/>
        <ProgressBar HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Grid.Row="6" Grid.Column="2" Grid.ColumnSpan="2" Margin="5" Maximum="{Binding DownloadCount}" Value="{Binding DownloadProgress}"/>
        <StackPanel Grid.Column="4" HorizontalAlignment="Stretch"  Grid.Row="0" Grid.RowSpan="4" VerticalAlignment="Stretch" Margin="5" >
            <Button  Content="Open Phrase File..." HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Grid.Column="3" Margin="5" Command="self:CustomCommands.BrowsePhraseFileCommand"/>
            <Button  Content="Select Output Directory..." HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Grid.Column="3" Grid.Row="1" Margin="5" Command="self:CustomCommands.BrowseOutputDirectoryCommand"/>
            <Button  Content="Create new Phrase File" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Grid.Column="3" Margin="5" Command="self:CustomCommands.CreatePhraseFileCommand"/>
            <Label Content="TTS Provider"/>
            <ComboBox ItemsSource="{Binding Path=TTSEngines}" SelectedValue="{Binding SelectedEngine, Mode=TwoWay}" SelectionChanged="EngineComboBox_SelectionChanged" />
            <Label Content="Voice" >
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=SelectedEngine.HasVoices}" Value="true">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
            <ComboBox ItemsSource="{Binding Path=SelectedEngine.AvailableVoices}" SelectedValue="{Binding SelectedEngine.SelectedVoice, Mode=TwoWay}" SelectionChanged="VoiceComboBox_SelectionChanged" >
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=SelectedEngine.HasVoices}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
            <Label Content="{Binding Path=SelectedEngine.SelectedNumericSpeed}" ContentStringFormat="Speech rate: {0}" >
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=SelectedEngine.HasNumericSpeed}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
            <Label Content="Speech rate:" >
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=SelectedEngine.HasDiscreteSpeed}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
            <Slider  Minimum="-10" SmallChange="1" Value="{Binding Path=SelectedEngine.SelectedNumericSpeed}" TickPlacement="BottomRight" ValueChanged="SpeechRateSlider_ValueChanged">
                <Slider.Style>
                    <Style TargetType="{x:Type Slider}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=SelectedEngine.HasNumericSpeed}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Slider.Style>
            </Slider>
            <ComboBox ItemsSource="{Binding Path=SelectedEngine.AvailableSpeeds}" SelectedItem="{Binding Path=SelectedEngine.SelectedDiscreteSpeed}" SelectionChanged="EngineComboBox_SelectionChanged">
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=SelectedEngine.HasDiscreteSpeed}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
            <Label Content="{Binding Path=SelectedEngine.SelectedNumericVolume}" ContentStringFormat="Volume: {0}"  >
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=SelectedEngine.HasNumericVolume}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
            <Slider Minimum="0" Maximum="100" SmallChange="1" Value="{Binding Path=SelectedEngine.SelectedNumericVolume}" TickPlacement="BottomRight" ValueChanged="VolumeSlider_ValueChanged" TickFrequency="10" LargeChange="10">
                <Slider.Style>
                    <Style TargetType="{x:Type Slider}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=SelectedEngine.HasNumericVolume}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Slider.Style>
            </Slider>
            <Label Content="Volume: "  >
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=SelectedEngine.HasDiscreteVolume}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
            <ComboBox ItemsSource="{Binding Path=SelectedEngine.AvailableVolumes}" SelectedItem="{Binding Path=SelectedEngine.SelectedDiscreteVolume}" SelectionChanged="EngineComboBox_SelectionChanged">
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=SelectedEngine.HasDiscreteVolume}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
        </StackPanel>
        <StackPanel Orientation="Vertical" Grid.Column="4" Grid.Row="3" VerticalAlignment="Bottom">
            <Button  Content="{Binding SelectedRowCount}" ContentStringFormat="Move {0} rows(s) up" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"   Margin="5" Command="self:CustomCommands.MoveRowsUpCommand"/>
            <Button  Content="{Binding SelectedRowCount}" ContentStringFormat="Move {0} rows(s) down" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"   Margin="5" Command="self:CustomCommands.MoveRowsDownCommand"/>
            <Button  Content="{Binding SelectedRowCount}" ContentStringFormat="Insert {0} rows(s) above" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"   Margin="5" Command="self:CustomCommands.InsertRowsAboveCommand"/>
            <Button  Content="{Binding SelectedRowCount}" ContentStringFormat="Insert {0} rows(s) below" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"   Margin="5" Command="self:CustomCommands.InsertRowsBelowCommand"/>
            <StackPanel Orientation="Horizontal">
                <Button  Content="{Binding PlayableRowCount}" ContentStringFormat="Play {0} voice(s)" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="115"  Margin="5" Command="self:CustomCommands.PlaySelectedCommand"/>
                <Button  Content="Play All" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="75"  Margin="5" Command="self:CustomCommands.PlayAllCommand"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Button  Content="Pause" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="60"  Margin="5" Command="self:CustomCommands.PausePlayingCommand"/>
                <Button  Content="Resume" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="60"  Margin="5" Command="self:CustomCommands.ResumePlayingCommand"/>
                <Button  Content="Stop" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="60"  Margin="5" Command="self:CustomCommands.StopPlayingCommand"/>
            </StackPanel>
            <Button Margin="5" HorizontalAlignment="Stretch" Command="self:CustomCommands.ShowSettingsCommand">
                <StackPanel Orientation="Horizontal">
                    <Image  Source="{Binding SettingsImage}" HorizontalAlignment="Left" Margin="5"  VerticalAlignment="Stretch" Width="30"/>
                    <Label Content="Settings..." VerticalAlignment="Center" />
                </StackPanel>
            </Button>
            <Button  Content="Save Phrase File" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5" Command="self:CustomCommands.SavePhraseFileCommand"/>

        </StackPanel>
        <Button  Content="Save Phrase File As..." HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Grid.Column="4" Grid.Row="6" Margin="5" Command="self:CustomCommands.SaveAsPhraseFileCommand"/>
        <Image Source="{Binding HeaderImage}" HorizontalAlignment="Left" Margin="5"  VerticalAlignment="Stretch" Grid.RowSpan="2" Width="100"/>
        <Button  Content="Stop!" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Command="self:CustomCommands.StopDownloadingCommand" Margin="5" Grid.Column="1" Grid.Row="6"/>
        <Button  Content="Go!" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Command="self:CustomCommands.StartDownloadingCommand" Margin="5" Grid.Column="0" Grid.Row="6"/>

    </Grid>
</Window>
