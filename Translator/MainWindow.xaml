<Window x:Uid="WindowTitle" x:Class="TTSAutomate.MainWindow"
        xml:lang="en-US"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TTSAutomate"
        xmlns:self="clr-namespace:TTSAutomate.Commands"
        mc:Ignorable="d"
        Title="TTSAutomate" Height="800" Width="1000" FontSize="16" Background="#FF4692D1" Icon="speech-bubble.ico" Closing="Window_Closing" GotFocus="Window_GotFocus" Loaded="Window_GotFocus">
    <Window.CommandBindings>
        <CommandBinding x:Uid="BrowsePhraseFileCommand" Command="self:CustomCommands.BrowsePhraseFileCommand" Executed="BrowsePhraseFileCommand_Executed" />
        <CommandBinding x:Uid="CreatePhraseFileCommand" Command="self:CustomCommands.CreatePhraseFileCommand" Executed="CreatePhraseFileCommand_Executed" />
        <CommandBinding x:Uid="BrowseOutputDirectoryCommand" Command="self:CustomCommands.BrowseOutputDirectoryCommand" Executed="BrowseOutputDirectoryCommand_Executed" />
        <CommandBinding x:Uid="StartDownloadingCommand" Command="self:CustomCommands.StartDownloadingCommand" CanExecute="StartDownloadingCommand_CanExecute" Executed="StartDownloadingCommand_Executed" />
        <CommandBinding x:Uid="StopDownloadingCommand" Command="self:CustomCommands.StopDownloadingCommand" CanExecute="StopDownloadingCommand_CanExecute" Executed="StopDownloadingCommand_Executed" />
        <CommandBinding x:Uid="SavePhraseFileCommand" Command="self:CustomCommands.SavePhraseFileCommand" CanExecute="SavePhraseFileCommand_CanExecute" Executed="SavePhraseFileCommand_Executed" />
        <CommandBinding x:Uid="SaveAsPhraseFileCommand" Command="self:CustomCommands.SaveAsPhraseFileCommand" CanExecute="SavePhraseFileCommand_CanExecute" Executed="SaveAsPhraseFileCommand_Executed" />
        <CommandBinding x:Uid="InsertRowsAboveCommand" Command="self:CustomCommands.InsertRowsAboveCommand" CanExecute="InsertRowsAboveCommand_CanExecute" Executed="InsertRowsAboveCommand_Executed" />
        <CommandBinding x:Uid="InsertRowsBelowCommand" Command="self:CustomCommands.InsertRowsBelowCommand" CanExecute="InsertRowsBelowCommand_CanExecute" Executed="InsertRowsBelowCommand_Executed" />
        <CommandBinding x:Uid="MoveRowsUpCommand" Command="self:CustomCommands.MoveRowsUpCommand" CanExecute="MoveRowsUpCommand_CanExecute" Executed="MoveRowsUpCommand_Executed" />
        <CommandBinding x:Uid="MoveRowsDownCommand" Command="self:CustomCommands.MoveRowsDownCommand" CanExecute="MoveRowsDownCommand_CanExecute" Executed="MoveRowsDownCommand_Executed" />
        <CommandBinding x:Uid="ShowSettingsCommand" Command="self:CustomCommands.ShowSettingsCommand" CanExecute="ShowSettingsCommand_CanExecute" Executed="ShowSettingsCommand_Executed" />
        <CommandBinding x:Uid="PlayAllCommand" Command="self:CustomCommands.PlayAllCommand" CanExecute="PlayAllCommand_CanExecute" Executed="PlayAllCommand_Executed" />
        <CommandBinding x:Uid="PlaySelectedCommand" Command="self:CustomCommands.PlaySelectedCommand" CanExecute="PlaySelectedCommand_CanExecute" Executed="PlaySelectedCommand_Executed" />
        <CommandBinding x:Uid="PausePlayingCommand" Command="self:CustomCommands.PausePlayingCommand" CanExecute="PausePlayingCommand_CanExecute" Executed="PausePlayingCommand_Executed" />
        <CommandBinding x:Uid="ResumePlayingCommand" Command="self:CustomCommands.ResumePlayingCommand" CanExecute="ResumePlayingCommand_CanExecute" Executed="ResumePlayingCommand_Executed" />
        <CommandBinding x:Uid="StopPlayingCommand" Command="self:CustomCommands.StopPlayingCommand" CanExecute="StopPlayingCommand_CanExecute" Executed="StopPlayingCommand_Executed" />
    </Window.CommandBindings>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo x:Uid="TaskbarItemInfo_1"/>
    </Window.TaskbarItemInfo>
    <Grid x:Uid="Grid_1">
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Uid="ColumnDefinition_1" Width="90"/>
            <ColumnDefinition x:Uid="ColumnDefinition_2" Width="90"/>
            <ColumnDefinition x:Uid="ColumnDefinition_3" Width="60"/>
            <ColumnDefinition x:Uid="ColumnDefinition_4" Width="*"/>
            <ColumnDefinition x:Uid="ColumnDefinition_5" Width="210"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition x:Uid="RowDefinition_1" Height="40"/>
            <RowDefinition x:Uid="RowDefinition_2" Height="40"/>
            <RowDefinition x:Uid="RowDefinition_3" Height="*"/>
            <RowDefinition x:Uid="RowDefinition_4" Height="350"/>
            <RowDefinition x:Uid="RowDefinition_5" Height="60"/>
        </Grid.RowDefinitions>
        <DataGrid x:Uid="WordsListView" x:Name="WordsListView" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="2" Grid.RowSpan="2" Grid.ColumnSpan="4" RowHeaderWidth="35" ItemsSource="{Binding Path=PhraseItems}" AutoGenerateColumns="False" CellEditEnding="WordsListView_CellEditEnding"  Margin="5" PreviewKeyDown="WordsListView_PreviewKeyDown" AlternatingRowBackground="#FFE5EDF7" SelectionUnit="CellOrRowHeader" SelectionChanged="WordsListView_SelectionChanged" local:DataGridBehavior.DisplayRowNumber="True" >
            <DataGrid.Columns>
                <DataGridTextColumn  x:Uid="FolderColumn" Header="Folder" Binding="{Binding Folder}" CanUserSort="False" />
                <DataGridTextColumn  x:Uid="FilenameColumn" Header="Filename" Binding="{Binding FileName}" CanUserSort="False" />
                <DataGridTextColumn  x:Uid="PhraseColumn" Header="Phrase to Speak" Binding="{Binding Phrase}" CanUserSort="False"/>
                <DataGridTemplateColumn x:Uid="PlayButtonColumn" Header="Play" CanUserSort="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate x:Uid="DataTemplate_1">
                            <Button x:Uid="PlayButton" Click="PlayButton_Click" CommandParameter="{Binding FullPathAndFile}" >
                                <Button.Style>
                                    <Style x:Uid="Style_1" TargetType="{x:Type Button}">
                                        <Setter x:Uid="PlayButtonPlay" Property="Content" Value="Play" />
                                        <Setter x:Uid="Setter_2" Property="IsEnabled" Value="False" />
                                        <Setter x:Uid="Setter_3" Property="Visibility" Value="Visible" />
                                        <Setter x:Uid="Setter_4" Property="Focusable" Value="False"/>
                                        <Style.Triggers>
                                            <DataTrigger x:Uid="DataTrigger_1" Binding="{Binding DownloadComplete}" Value="False">
                                                <Setter x:Uid="PlayButtonPreview" Property="Content" Value="Preview" />
                                            </DataTrigger>
                                            <DataTrigger x:Uid="DataTrigger_2" Binding="{Binding CanDownload}" Value="True">
                                                <Setter x:Uid="Setter_6" Property="IsEnabled" Value="True" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Label  x:Uid="PhraseFilename" Content="Phrase File" HorizontalAlignment="Stretch" VerticalContentAlignment="Center" VerticalAlignment="Stretch" Margin="5" Grid.ColumnSpan="2" Grid.Column="1"/>
        <TextBox x:Uid="TextBox_1" HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="{Binding Path=PhraseFileName}"  VerticalContentAlignment="Center" VerticalAlignment="Stretch"  Grid.Column="3" Margin="5" IsReadOnly="True" >
            <TextBox.Style>
                <Style x:Uid="Style_2" TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                        <DataTrigger x:Uid="DataTrigger_3" Binding="{Binding NeedToSave}" Value="True">
                            <Setter x:Uid="Setter_7" Property="Background" Value="Red" />
                            <Setter x:Uid="Setter_8" Property="Foreground" Value="White" />
                            <Setter x:Uid="Setter_9" Property="FontStyle" Value="Italic" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <Label  x:Uid="OutputDirectory" Content="Output Directory" HorizontalAlignment="Stretch" VerticalContentAlignment="Center" VerticalAlignment="Stretch" Grid.Row="1" Margin="5" Grid.Column="1" Grid.ColumnSpan="2"/>
        <TextBox x:Uid="TextBox_2" HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="{Binding Path=OutputDirectoryName}" VerticalContentAlignment="Center" VerticalAlignment="Stretch"  Grid.Column="3" Grid.Row="1" Margin="5" IsReadOnly="True"/>
        <ProgressBar x:Uid="ProgressBar_1" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Grid.Row="6" Grid.Column="2" Grid.ColumnSpan="2" Margin="5" Maximum="{Binding DownloadCount}" Value="{Binding DownloadProgress}"/>
        <StackPanel x:Uid="StackPanel_1" Grid.Column="4" HorizontalAlignment="Stretch"  Grid.Row="0" Grid.RowSpan="4" VerticalAlignment="Stretch" Margin="5" >
            <Button  x:Uid="OpenPhraseFile" Content="Open Phrase File..." ToolTip="Ctrl O" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Grid.Column="3" Margin="5" Command="self:CustomCommands.BrowsePhraseFileCommand"/>
            <Button  x:Uid="SelectOutputDirectory" Content="Select Output Directory..." ToolTip="Ctrl P" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Grid.Column="3" Grid.Row="1" Margin="5" Command="self:CustomCommands.BrowseOutputDirectoryCommand"/>
            <Button  x:Uid="CreateNewPhraseFile" Content="Create new Phrase File" ToolTip="Ctrl N" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Grid.Column="3" Margin="5" Command="self:CustomCommands.CreatePhraseFileCommand"/>
            <Label x:Uid="TTSProvider" Content="TTS Provider"/>
            <ComboBox x:Uid="Engine" ItemsSource="{Binding Path=TTSEngines}" SelectedValue="{Binding SelectedEngine, Mode=TwoWay}" SelectionChanged="EngineComboBox_SelectionChanged" />
            <Label x:Uid="Voice" Content="Voice" >
                <Label.Style>
                    <Style x:Uid="Style_3" TargetType="{x:Type Label}">
                        <Setter x:Uid="Setter_10" Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger x:Uid="DataTrigger_4" Binding="{Binding Path=SelectedEngine.HasVoices}" Value="true">
                                <Setter x:Uid="Setter_11" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
            <ComboBox x:Uid="AvailableVoices" ItemsSource="{Binding Path=SelectedEngine.AvailableVoices}" SelectedValue="{Binding SelectedEngine.SelectedVoice, Mode=TwoWay}" SelectionChanged="VoiceComboBox_SelectionChanged" >
                <ComboBox.Style>
                    <Style x:Uid="Style_4" TargetType="{x:Type ComboBox}">
                        <Setter x:Uid="Setter_12" Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger x:Uid="DataTrigger_5" Binding="{Binding Path=SelectedEngine.HasVoices}" Value="True">
                                <Setter x:Uid="Setter_13" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
            <Label x:Uid="SelectedNumericSpeed" Content="{Binding Path=SelectedEngine.SelectedNumericSpeed}" ContentStringFormat="Speech rate: {0}" >
                <Label.Style>
                    <Style x:Uid="Style_5" TargetType="{x:Type Label}">
                        <Setter x:Uid="Setter_14" Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger x:Uid="DataTrigger_6" Binding="{Binding Path=SelectedEngine.HasNumericSpeed}" Value="True">
                                <Setter x:Uid="Setter_15" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
            <Label x:Uid="SelectedDiscreteSpeed" Content="Speech rate:" >
                <Label.Style>
                    <Style x:Uid="Style_6" TargetType="{x:Type Label}">
                        <Setter x:Uid="Setter_16" Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger x:Uid="DataTrigger_7" Binding="{Binding Path=SelectedEngine.HasDiscreteSpeed}" Value="True">
                                <Setter x:Uid="Setter_17" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
            <Slider  x:Uid="Slider_1" Minimum="-10" SmallChange="1" Value="{Binding Path=SelectedEngine.SelectedNumericSpeed}" TickPlacement="BottomRight" ValueChanged="SpeechRateSlider_ValueChanged">
                <Slider.Style>
                    <Style x:Uid="Style_7" TargetType="{x:Type Slider}">
                        <Setter x:Uid="Setter_18" Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger x:Uid="DataTrigger_8" Binding="{Binding Path=SelectedEngine.HasNumericSpeed}" Value="True">
                                <Setter x:Uid="Setter_19" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Slider.Style>
            </Slider>
            <ComboBox x:Uid="AvailableSpeeds" ItemsSource="{Binding Path=SelectedEngine.AvailableSpeeds}" SelectedItem="{Binding Path=SelectedEngine.SelectedDiscreteSpeed}" SelectionChanged="EngineComboBox_SelectionChanged">
                <ComboBox.Style>
                    <Style x:Uid="Style_8" TargetType="{x:Type ComboBox}">
                        <Setter x:Uid="Setter_20" Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger x:Uid="DataTrigger_9" Binding="{Binding Path=SelectedEngine.HasDiscreteSpeed}" Value="True">
                                <Setter x:Uid="Setter_21" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
            <Label x:Uid="SelectedNumericVolume" Content="{Binding Path=SelectedEngine.SelectedNumericVolume}" ContentStringFormat="Volume: {0}"  >
                <Label.Style>
                    <Style x:Uid="Style_9" TargetType="{x:Type Label}">
                        <Setter x:Uid="Setter_22" Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger x:Uid="DataTrigger_10" Binding="{Binding Path=SelectedEngine.HasNumericVolume}" Value="True">
                                <Setter x:Uid="Setter_23" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
            <Slider x:Uid="Slider_2" Minimum="0" Maximum="100" SmallChange="1" Value="{Binding Path=SelectedEngine.SelectedNumericVolume}" TickPlacement="BottomRight" ValueChanged="VolumeSlider_ValueChanged" TickFrequency="10" LargeChange="10">
                <Slider.Style>
                    <Style x:Uid="Style_10" TargetType="{x:Type Slider}">
                        <Setter x:Uid="Setter_24" Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger x:Uid="DataTrigger_11" Binding="{Binding Path=SelectedEngine.HasNumericVolume}" Value="True">
                                <Setter x:Uid="Setter_25" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Slider.Style>
            </Slider>
            <Label x:Uid="SelectedDiscreteVolume" Content="Volume: "  >
                <Label.Style>
                    <Style x:Uid="Style_11" TargetType="{x:Type Label}">
                        <Setter x:Uid="Setter_26" Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger x:Uid="DataTrigger_12" Binding="{Binding Path=SelectedEngine.HasDiscreteVolume}" Value="True">
                                <Setter x:Uid="Setter_27" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
            <ComboBox x:Uid="ComboBox_4" ItemsSource="{Binding Path=SelectedEngine.AvailableVolumes}" SelectedItem="{Binding Path=SelectedEngine.SelectedDiscreteVolume}" SelectionChanged="EngineComboBox_SelectionChanged">
                <ComboBox.Style>
                    <Style x:Uid="Style_12" TargetType="{x:Type ComboBox}">
                        <Setter x:Uid="Setter_28" Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger x:Uid="DataTrigger_13" Binding="{Binding Path=SelectedEngine.HasDiscreteVolume}" Value="True">
                                <Setter x:Uid="Setter_29" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
        </StackPanel>
        <StackPanel x:Uid="StackPanel_2" Orientation="Vertical" Grid.Column="4" Grid.Row="3" VerticalAlignment="Bottom">
            <Button  x:Uid="MoveRowsUp" Content="{Binding SelectedRowCount}" ToolTip="Alt PageUp" ContentStringFormat="Move {0} rows(s) up" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"   Margin="5" Command="self:CustomCommands.MoveRowsUpCommand"/>
            <Button  x:Uid="MoveRowsDown" Content="{Binding SelectedRowCount}" ToolTip="Alt PageDown" ContentStringFormat="Move {0} rows(s) down" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"   Margin="5" Command="self:CustomCommands.MoveRowsDownCommand"/>
            <Button  x:Uid="InsertRowsAbove" Content="{Binding SelectedRowCount}" ToolTip="Alt Insert" ContentStringFormat="Insert {0} rows(s) above" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"   Margin="5" Command="self:CustomCommands.InsertRowsAboveCommand"/>
            <Button  x:Uid="InsertRowsBelow" Content="{Binding SelectedRowCount}" ToolTip="Ctrl Alt Insert" ContentStringFormat="Insert {0} rows(s) below" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"   Margin="5" Command="self:CustomCommands.InsertRowsBelowCommand"/>
            <StackPanel x:Uid="StackPanel_3" Orientation="Horizontal">
                <Button  x:Uid="PlayableRowCount" Content="{Binding PlayableRowCount}" ContentStringFormat="Play {0} voice(s)" ToolTip="Alt P" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="115"  Margin="5" Command="self:CustomCommands.PlaySelectedCommand"/>
                <Button  x:Uid="PlayAll" Content="Play All" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ToolTip="Alt A" Width="75"  Margin="5" Command="self:CustomCommands.PlayAllCommand"/>
            </StackPanel>
            <StackPanel x:Uid="StackPanel_4" Orientation="Horizontal">
                <Button  x:Uid="PausePlaying" Content="Pause" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="60" ToolTip="Alt U"  Margin="5" Command="self:CustomCommands.PausePlayingCommand"/>
                <Button  x:Uid="ResumePlaying" Content="Resume" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="60" ToolTip="Alt I"  Margin="5" Command="self:CustomCommands.ResumePlayingCommand"/>
                <Button  x:Uid="StopPlaying" Content="Stop" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="60" ToolTip="Alt S"  Margin="5" Command="self:CustomCommands.StopPlayingCommand"/>
            </StackPanel>
            <Button x:Uid="ShowSettings" Margin="5" HorizontalAlignment="Stretch" ToolTip="F12"  Command="self:CustomCommands.ShowSettingsCommand">
                <StackPanel x:Uid="StackPanel_5" Orientation="Horizontal">
                    <Image  x:Uid="Image_1" Source="{Binding SettingsImage}" HorizontalAlignment="Left" Margin="5"  VerticalAlignment="Stretch" Width="30"/>
                    <Label x:Uid="SettingsButton" Content="Settings..." VerticalAlignment="Center" />
                </StackPanel>
            </Button>
            <Button  x:Uid="SavePhraseFile" Content="Save Phrase File" ToolTip="Ctrl S" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5" Command="self:CustomCommands.SavePhraseFileCommand"/>
        </StackPanel>
        <Button  x:Uid="SavePhraseFileAs" Content="Save Phrase File As..." HorizontalAlignment="Stretch" ToolTip="Ctrl Alt S"  VerticalAlignment="Stretch"  Grid.Column="4" Grid.Row="6" Margin="5" Command="self:CustomCommands.SaveAsPhraseFileCommand"/>
        <Image x:Uid="Image_2" Source="{Binding HeaderImage}" HorizontalAlignment="Left" Margin="5"  VerticalAlignment="Stretch" Grid.RowSpan="2" Width="100"/>
        <Button  x:Uid="StopDownloading" Content="Stop!" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ToolTip="Ctrl H" Command="self:CustomCommands.StopDownloadingCommand" Margin="5" Grid.Column="1" Grid.Row="6"/>
        <Button  x:Uid="StartDownloading" Content="Go!" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ToolTip="Ctrl G" Command="self:CustomCommands.StartDownloadingCommand" Margin="5" Grid.Column="0" Grid.Row="6"/>

    </Grid>
</Window>
